{"version":3,"sources":["cljc/java_time/local_time.cljs"],"mappings":"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","names":["cljc.java-time.local-time/max","goog.object/get","java.time/LocalTime","cljc.java-time.local-time/noon","cljc.java-time.local-time/midnight","cljc.java-time.local-time/min","cljc.java-time.local-time/minus-minutes","this4770","long4771","cljc.java-time.local-time/truncated-to","this4772","java-time-temporal-TemporalUnit4773","cljc.java-time.local-time/range","this4774","java-time-temporal-TemporalField4775","cljc.java-time.local-time/get-hour","this4776","cljc.java-time.local-time/at-offset","this4777","java-time-ZoneOffset4778","cljc.java-time.local-time/minus-hours","this4779","long4780","var_args","G__54672","cljc.java-time.local-time/of","js/Error","int4781","int4782","int4783","int4784","cljs.core.js_invoke","int4785","int4786","int4787","int4788","int4789","cljc.java-time.local-time/get-nano","this4790","cljc.java-time.local-time/minus-seconds","this4791","long4792","cljc.java-time.local-time/get-second","this4793","cljc.java-time.local-time/plus-nanos","this4794","long4795","G__54678","cljc.java-time.local-time/plus","this4796","long4797","java-time-temporal-TemporalUnit4798","this4799","java-time-temporal-TemporalAmount4800","cljc.java-time.local-time/with-hour","this4801","int4802","cljc.java-time.local-time/with-minute","this4803","int4804","cljc.java-time.local-time/plus-minutes","this4805","long4806","cljc.java-time.local-time/query","this4807","java-time-temporal-TemporalQuery4808","cljc.java-time.local-time/at-date","this4809","java-time-LocalDate4810","cljc.java-time.local-time/to-string","this4811","cljc.java-time.local-time/is-before","this4812","java-time-LocalTime4813","G__54690","cljc.java-time.local-time/minus","this4814","long4815","java-time-temporal-TemporalUnit4816","this4817","java-time-temporal-TemporalAmount4818","cljc.java-time.local-time/plus-hours","this4819","long4820","cljc.java-time.local-time/to-second-of-day","this4821","cljc.java-time.local-time/get-long","this4822","java-time-temporal-TemporalField4823","cljc.java-time.local-time/with-nano","this4824","int4825","cljc.java-time.local-time/until","this4826","java-time-temporal-Temporal4827","java-time-temporal-TemporalUnit4828","cljc.java-time.local-time/of-nano-of-day","long4829","cljc.java-time.local-time/from","java-time-temporal-TemporalAccessor4830","cljc.java-time.local-time/is-after","this4831","java-time-LocalTime4832","cljc.java-time.local-time/minus-nanos","this4833","long4834","cljc.java-time.local-time/is-supported","this4835","G__4836","G__54705","cljc.java-time.local-time/parse","java-lang-CharSequence4837","java-time-format-DateTimeFormatter4838","java-lang-CharSequence4839","cljc.java-time.local-time/with-second","this4840","int4841","cljc.java-time.local-time/get-minute","this4842","cljc.java-time.local-time/hash-code","this4843","cljc.java-time.local-time/adjust-into","this4844","java-time-temporal-Temporal4845","G__54719","cljc.java-time.local-time/with","this4846","java-time-temporal-TemporalField4847","long4848","this4849","java-time-temporal-TemporalAdjuster4850","G__54721","cljc.java-time.local-time/now","cljs.core/js-invoke","G__4852","cljc.java-time.local-time/compare-to","this4853","java-time-LocalTime4854","cljc.java-time.local-time/to-nano-of-day","this4855","cljc.java-time.local-time/plus-seconds","this4856","long4857","cljc.java-time.local-time/get","this4858","java-time-temporal-TemporalField4859","cljc.java-time.local-time/of-second-of-day","long4860","cljc.java-time.local-time/equals","this4861","java-lang-Object4862","cljc.java-time.local-time/format","this4863","java-time-format-DateTimeFormatter4864"],"sourcesContent":["(ns cljc.java-time.local-time (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time :refer [LocalTime]]))\n(def max (goog.object/get java.time.LocalTime \"MAX\"))\n(def noon (goog.object/get java.time.LocalTime \"NOON\"))\n(def midnight (goog.object/get java.time.LocalTime \"MIDNIGHT\"))\n(def min (goog.object/get java.time.LocalTime \"MIN\"))\n(clojure.core/defn minus-minutes {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4770 ^long long4771] (.minusMinutes this4770 long4771)))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4772 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4773] (.truncatedTo this4772 java-time-temporal-TemporalUnit4773)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.LocalTime this4774 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4775] (.range this4774 java-time-temporal-TemporalField4775)))\n(clojure.core/defn get-hour {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4776] (.hour this4776)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.LocalTime\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetTime [^js/JSJoda.LocalTime this4777 ^js/JSJoda.ZoneOffset java-time-ZoneOffset4778] (.atOffset this4777 java-time-ZoneOffset4778)))\n(clojure.core/defn minus-hours {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4779 ^long long4780] (.minusHours this4779 long4780)))\n(clojure.core/defn of {:arglists (quote ([\"int\" \"int\" \"int\" \"int\"] [\"int\" \"int\"] [\"int\" \"int\" \"int\"]))} (^js/JSJoda.LocalTime [^int int4781 ^int int4782 ^int int4783 ^int int4784] (js-invoke java.time.LocalTime \"of\" int4781 int4782 int4783 int4784)) (^js/JSJoda.LocalTime [^int int4785 ^int int4786] (js-invoke java.time.LocalTime \"of\" int4785 int4786)) (^js/JSJoda.LocalTime [^int int4787 ^int int4788 ^int int4789] (js-invoke java.time.LocalTime \"of\" int4787 int4788 int4789)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4790] (.nano this4790)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4791 ^long long4792] (.minusSeconds this4791 long4792)))\n(clojure.core/defn get-second {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4793] (.second this4793)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4794 ^long long4795] (.plusNanos this4794 long4795)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.LocalTime\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4796 ^long long4797 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4798] (.plus this4796 long4797 java-time-temporal-TemporalUnit4798)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4799 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount4800] (.plus this4799 java-time-temporal-TemporalAmount4800)))\n(clojure.core/defn with-hour {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4801 ^int int4802] (.withHour this4801 int4802)))\n(clojure.core/defn with-minute {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4803 ^int int4804] (.withMinute this4803 int4804)))\n(clojure.core/defn plus-minutes {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4805 ^long long4806] (.plusMinutes this4805 long4806)))\n(clojure.core/defn query {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.LocalTime this4807 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery4808] (.query this4807 java-time-temporal-TemporalQuery4808)))\n(clojure.core/defn at-date {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalDate\"]))} (^js/JSJoda.LocalDateTime [^js/JSJoda.LocalTime this4809 ^js/JSJoda.LocalDate java-time-LocalDate4810] (.atDate this4809 java-time-LocalDate4810)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.LocalTime\"]))} (^java.lang.String [^js/JSJoda.LocalTime this4811] (.toString this4811)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^boolean [^js/JSJoda.LocalTime this4812 ^js/JSJoda.LocalTime java-time-LocalTime4813] (.isBefore this4812 java-time-LocalTime4813)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.LocalTime\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4814 ^long long4815 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4816] (.minus this4814 long4815 java-time-temporal-TemporalUnit4816)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4817 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount4818] (.minus this4817 java-time-temporal-TemporalAmount4818)))\n(clojure.core/defn plus-hours {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4819 ^long long4820] (.plusHours this4819 long4820)))\n(clojure.core/defn to-second-of-day {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4821] (.toSecondOfDay this4821)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.LocalTime this4822 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4823] (.getLong this4822 java-time-temporal-TemporalField4823)))\n(clojure.core/defn with-nano {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4824 ^int int4825] (.withNano this4824 int4825)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.LocalTime this4826 ^js/JSJoda.Temporal java-time-temporal-Temporal4827 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4828] (.until this4826 java-time-temporal-Temporal4827 java-time-temporal-TemporalUnit4828)))\n(clojure.core/defn of-nano-of-day {:arglists (quote ([\"long\"]))} (^js/JSJoda.LocalTime [^long long4829] (js-invoke java.time.LocalTime \"ofNanoOfDay\" long4829)))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor4830] (js-invoke java.time.LocalTime \"from\" java-time-temporal-TemporalAccessor4830)))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^boolean [^js/JSJoda.LocalTime this4831 ^js/JSJoda.LocalTime java-time-LocalTime4832] (.isAfter this4831 java-time-LocalTime4832)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4833 ^long long4834] (.minusNanos this4833 long4834)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^boolean [this4835 G__4836] (.isSupported ^js/JSJoda.LocalTime this4835 G__4836)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\" \"java.time.format.DateTimeFormatter\"] [\"java.lang.CharSequence\"]))} (^js/JSJoda.LocalTime [^java.lang.CharSequence java-lang-CharSequence4837 ^js/JSJoda.DateTimeFormatter java-time-format-DateTimeFormatter4838] (js-invoke java.time.LocalTime \"parse\" java-lang-CharSequence4837 java-time-format-DateTimeFormatter4838)) (^js/JSJoda.LocalTime [^java.lang.CharSequence java-lang-CharSequence4839] (js-invoke java.time.LocalTime \"parse\" java-lang-CharSequence4839)))\n(clojure.core/defn with-second {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4840 ^int int4841] (.withSecond this4840 int4841)))\n(clojure.core/defn get-minute {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4842] (.minute this4842)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4843] (.hashCode this4843)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.LocalTime this4844 ^js/JSJoda.Temporal java-time-temporal-Temporal4845] (.adjustInto this4844 java-time-temporal-Temporal4845)))\n(clojure.core/defn with {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\" \"long\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalAdjuster\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4846 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4847 ^long long4848] (.with this4846 java-time-temporal-TemporalField4847 long4848)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4849 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster4850] (.with this4849 java-time-temporal-TemporalAdjuster4850)))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.Clock\"] [\"java.time.ZoneId\"]))} (^js/JSJoda.LocalTime [] (js-invoke java.time.LocalTime \"now\")) (^js/JSJoda.LocalTime [G__4852] (js-invoke java.time.LocalTime \"now\" G__4852)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this4853 ^js/JSJoda.LocalTime java-time-LocalTime4854] (.compareTo this4853 java-time-LocalTime4854)))\n(clojure.core/defn to-nano-of-day {:arglists (quote ([\"java.time.LocalTime\"]))} (^long [^js/JSJoda.LocalTime this4855] (.toNanoOfDay this4855)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this4856 ^long long4857] (.plusSeconds this4856 long4857)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.LocalTime this4858 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4859] (.get this4858 java-time-temporal-TemporalField4859)))\n(clojure.core/defn of-second-of-day {:arglists (quote ([\"long\"]))} (^js/JSJoda.LocalTime [^long long4860] (js-invoke java.time.LocalTime \"ofSecondOfDay\" long4860)))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.LocalTime\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.LocalTime this4861 ^java.lang.Object java-lang-Object4862] (.equals this4861 java-lang-Object4862)))\n(clojure.core/defn format {:arglists (quote ([\"java.time.LocalTime\" \"java.time.format.DateTimeFormatter\"]))} (^java.lang.String [^js/JSJoda.LocalTime this4863 ^js/JSJoda.DateTimeFormatter java-time-format-DateTimeFormatter4864] (.format this4863 java-time-format-DateTimeFormatter4864)))\n"]}