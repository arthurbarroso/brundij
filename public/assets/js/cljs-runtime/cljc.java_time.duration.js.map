{"version":3,"sources":["cljc/java_time/duration.cljs"],"mappings":"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","names":["cljc.java-time.duration/zero","goog.object/get","java.time/Duration","cljc.java-time.duration/minus-minutes","this5119","long5120","cljc.java-time.duration/to-nanos","this5121","cljc.java-time.duration/minus-millis","this5122","long5123","cljc.java-time.duration/minus-hours","this5124","long5125","cljc.java-time.duration/of-days","long5126","cljs.core.js_invoke","cljc.java-time.duration/is-negative","this5127","cljc.java-time.duration/of","long5128","java-time-temporal-TemporalUnit5129","cljc.java-time.duration/is-zero","this5130","cljc.java-time.duration/multiplied-by","this5131","long5132","cljc.java-time.duration/with-nanos","this5133","int5134","cljc.java-time.duration/get-units","this5135","cljc.java-time.duration/get-nano","this5136","cljc.java-time.duration/plus-millis","this5137","long5138","cljc.java-time.duration/to-minutes","this5139","cljc.java-time.duration/minus-seconds","this5140","long5141","cljc.java-time.duration/plus-nanos","this5142","long5143","var_args","G__54853","cljc.java-time.duration/plus","js/Error","this5144","long5145","java-time-temporal-TemporalUnit5146","this5147","java-time-Duration5148","cljc.java-time.duration/divided-by","this5149","long5150","cljc.java-time.duration/plus-minutes","this5151","long5152","cljc.java-time.duration/to-string","this5153","G__54855","cljc.java-time.duration/minus","this5154","java-time-Duration5155","this5156","long5157","java-time-temporal-TemporalUnit5158","cljc.java-time.duration/add-to","this5159","java-time-temporal-Temporal5160","cljc.java-time.duration/plus-hours","this5161","long5162","cljc.java-time.duration/plus-days","this5163","long5164","cljc.java-time.duration/of-hours","long5165","cljc.java-time.duration/to-millis","this5166","cljc.java-time.duration/to-hours","this5167","cljc.java-time.duration/of-nanos","long5168","cljc.java-time.duration/of-millis","long5169","cljc.java-time.duration/negated","this5170","cljc.java-time.duration/abs","this5171","cljc.java-time.duration/between","java-time-temporal-Temporal5172","java-time-temporal-Temporal5173","cljc.java-time.duration/get-seconds","this5174","cljc.java-time.duration/from","java-time-temporal-TemporalAmount5175","cljc.java-time.duration/minus-nanos","this5176","long5177","cljc.java-time.duration/parse","java-lang-CharSequence5178","cljc.java-time.duration/hash-code","this5179","cljc.java-time.duration/with-seconds","this5180","long5181","cljc.java-time.duration/of-minutes","long5182","cljc.java-time.duration/subtract-from","this5183","java-time-temporal-Temporal5184","cljc.java-time.duration/compare-to","this5185","java-time-Duration5186","cljc.java-time.duration/plus-seconds","this5187","long5188","cljc.java-time.duration/get","this5189","java-time-temporal-TemporalUnit5190","cljc.java-time.duration/equals","this5191","java-lang-Object5192","G__54863","cljc.java-time.duration/of-seconds","long5193","long5194","long5195","cljc.java-time.duration/minus-days","this5196","long5197","cljc.java-time.duration/to-days","this5198"],"sourcesContent":["(ns cljc.java-time.duration (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time :refer [Duration]]))\n(def zero (goog.object/get java.time.Duration \"ZERO\"))\n(clojure.core/defn minus-minutes {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5119 ^long long5120] (.minusMinutes this5119 long5120)))\n(clojure.core/defn to-nanos {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this5121] (.toNanos this5121)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5122 ^long long5123] (.minusMillis this5122 long5123)))\n(clojure.core/defn minus-hours {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5124 ^long long5125] (.minusHours this5124 long5125)))\n(clojure.core/defn of-days {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long5126] (js-invoke java.time.Duration \"ofDays\" long5126)))\n(clojure.core/defn is-negative {:arglists (quote ([\"java.time.Duration\"]))} (^boolean [^js/JSJoda.Duration this5127] (.isNegative this5127)))\n(clojure.core/defn of {:arglists (quote ([\"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Duration [^long long5128 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5129] (js-invoke java.time.Duration \"of\" long5128 java-time-temporal-TemporalUnit5129)))\n(clojure.core/defn is-zero {:arglists (quote ([\"java.time.Duration\"]))} (^boolean [^js/JSJoda.Duration this5130] (.isZero this5130)))\n(clojure.core/defn multiplied-by {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5131 ^long long5132] (.multipliedBy this5131 long5132)))\n(clojure.core/defn with-nanos {:arglists (quote ([\"java.time.Duration\" \"int\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5133 ^int int5134] (.withNanos this5133 int5134)))\n(clojure.core/defn get-units {:arglists (quote ([\"java.time.Duration\"]))} (^java.util.List [^js/JSJoda.Duration this5135] (.units this5135)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this5136] (.nano this5136)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5137 ^long long5138] (.plusMillis this5137 long5138)))\n(clojure.core/defn to-minutes {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this5139] (.toMinutes this5139)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5140 ^long long5141] (.minusSeconds this5140 long5141)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5142 ^long long5143] (.plusNanos this5142 long5143)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Duration\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.Duration\" \"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5144 ^long long5145 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5146] (.plus this5144 long5145 java-time-temporal-TemporalUnit5146)) (^js/JSJoda.Duration [^js/JSJoda.Duration this5147 ^js/JSJoda.Duration java-time-Duration5148] (.plus this5147 java-time-Duration5148)))\n(clojure.core/defn divided-by {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5149 ^long long5150] (.dividedBy this5149 long5150)))\n(clojure.core/defn plus-minutes {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5151 ^long long5152] (.plusMinutes this5151 long5152)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Duration\"]))} (^java.lang.String [^js/JSJoda.Duration this5153] (.toString this5153)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Duration\" \"java.time.Duration\"] [\"java.time.Duration\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5154 ^js/JSJoda.Duration java-time-Duration5155] (.minus this5154 java-time-Duration5155)) (^js/JSJoda.Duration [^js/JSJoda.Duration this5156 ^long long5157 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5158] (.minus this5156 long5157 java-time-temporal-TemporalUnit5158)))\n(clojure.core/defn add-to {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Duration this5159 ^js/JSJoda.Temporal java-time-temporal-Temporal5160] (.addTo this5159 java-time-temporal-Temporal5160)))\n(clojure.core/defn plus-hours {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5161 ^long long5162] (.plusHours this5161 long5162)))\n(clojure.core/defn plus-days {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5163 ^long long5164] (.plusDays this5163 long5164)))\n(clojure.core/defn of-hours {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long5165] (js-invoke java.time.Duration \"ofHours\" long5165)))\n(clojure.core/defn to-millis {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this5166] (.toMillis this5166)))\n(clojure.core/defn to-hours {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this5167] (.toHours this5167)))\n(clojure.core/defn of-nanos {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long5168] (js-invoke java.time.Duration \"ofNanos\" long5168)))\n(clojure.core/defn of-millis {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long5169] (js-invoke java.time.Duration \"ofMillis\" long5169)))\n(clojure.core/defn negated {:arglists (quote ([\"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5170] (.negated this5170)))\n(clojure.core/defn abs {:arglists (quote ([\"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5171] (.abs this5171)))\n(clojure.core/defn between {:arglists (quote ([\"java.time.temporal.Temporal\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Duration [^js/JSJoda.Temporal java-time-temporal-Temporal5172 ^js/JSJoda.Temporal java-time-temporal-Temporal5173] (js-invoke java.time.Duration \"between\" java-time-temporal-Temporal5172 java-time-temporal-Temporal5173)))\n(clojure.core/defn get-seconds {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this5174] (.seconds this5174)))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.Duration [^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount5175] (js-invoke java.time.Duration \"from\" java-time-temporal-TemporalAmount5175)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5176 ^long long5177] (.minusNanos this5176 long5177)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Duration [^java.lang.CharSequence java-lang-CharSequence5178] (js-invoke java.time.Duration \"parse\" java-lang-CharSequence5178)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this5179] (.hashCode this5179)))\n(clojure.core/defn with-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5180 ^long long5181] (.withSeconds this5180 long5181)))\n(clojure.core/defn of-minutes {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long5182] (js-invoke java.time.Duration \"ofMinutes\" long5182)))\n(clojure.core/defn subtract-from {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Duration this5183 ^js/JSJoda.Temporal java-time-temporal-Temporal5184] (.subtractFrom this5183 java-time-temporal-Temporal5184)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Duration\" \"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this5185 ^js/JSJoda.Duration java-time-Duration5186] (.compareTo this5185 java-time-Duration5186)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5187 ^long long5188] (.plusSeconds this5187 long5188)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Duration this5189 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5190] (.get this5189 java-time-temporal-TemporalUnit5190)))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Duration\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Duration this5191 ^java.lang.Object java-lang-Object5192] (.equals this5191 java-lang-Object5192)))\n(clojure.core/defn of-seconds {:arglists (quote ([\"long\"] [\"long\" \"long\"]))} (^js/JSJoda.Duration [^long long5193] (js-invoke java.time.Duration \"ofSeconds\" long5193)) (^js/JSJoda.Duration [^long long5194 ^long long5195] (js-invoke java.time.Duration \"ofSeconds\" long5194 long5195)))\n(clojure.core/defn minus-days {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this5196 ^long long5197] (.minusDays this5196 long5197)))\n(clojure.core/defn to-days {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this5198] (.toDays this5198)))\n"]}