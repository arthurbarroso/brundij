{"version":3,"sources":["cljc/java_time/instant.cljs"],"mappings":"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","names":["cljc.java-time.instant/min","goog.object/get","java.time/Instant","cljc.java-time.instant/epoch","cljc.java-time.instant/max","cljc.java-time.instant/truncated-to","this4225","java-time-temporal-TemporalUnit4226","cljc.java-time.instant/range","this4227","java-time-temporal-TemporalField4228","e54710","js/Error","e__54569__auto__","var_args","G__54712","cljc.java-time.instant/of-epoch-second","long4229","long4230","cljs.core.js_invoke","long4231","cljc.java-time.instant/at-offset","this4232","java-time-ZoneOffset4233","cljc.java-time.instant/minus-millis","this4234","long4235","cljc.java-time.instant/get-nano","this4236","cljc.java-time.instant/plus-millis","this4237","long4238","cljc.java-time.instant/minus-seconds","this4239","long4240","cljc.java-time.instant/plus-nanos","this4241","long4242","G__54715","cljc.java-time.instant/plus","this4243","java-time-temporal-TemporalAmount4244","e54716","this4245","long4246","java-time-temporal-TemporalUnit4247","e54717","cljc.java-time.instant/query","this4248","java-time-temporal-TemporalQuery4249","cljc.java-time.instant/to-string","this4250","cljc.java-time.instant/is-before","this4251","java-time-Instant4252","G__54724","cljc.java-time.instant/minus","this4253","java-time-temporal-TemporalAmount4254","e54726","this4255","long4256","java-time-temporal-TemporalUnit4257","e54727","cljc.java-time.instant/at-zone","this4258","java-time-ZoneId4259","cljc.java-time.instant/of-epoch-milli","long4260","cljc.java-time.instant/get-long","this4261","java-time-temporal-TemporalField4262","cljc.java-time.instant/until","this4263","java-time-temporal-Temporal4264","java-time-temporal-TemporalUnit4265","e54734","cljc.java-time.instant/from","java-time-temporal-TemporalAccessor4266","e54735","cljc.java-time.instant/is-after","this4267","java-time-Instant4268","cljc.java-time.instant/minus-nanos","this4269","long4270","cljc.java-time.instant/is-supported","this4271","G__4272","cljc.java-time.instant/parse","java-lang-CharSequence4273","cljc.java-time.instant/hash-code","this4274","cljc.java-time.instant/adjust-into","this4275","java-time-temporal-Temporal4276","e54739","G__54744","cljc.java-time.instant/with","this4277","java-time-temporal-TemporalAdjuster4278","e54745","this4279","java-time-temporal-TemporalField4280","long4281","e54746","G__54748","cljc.java-time.instant/now","cljs.core/js-invoke","java-time-Clock4282","cljc.java-time.instant/to-epoch-milli","this4283","cljc.java-time.instant/get-epoch-second","this4284","cljc.java-time.instant/compare-to","this4285","java-time-Instant4286","cljc.java-time.instant/plus-seconds","this4287","long4288","cljc.java-time.instant/get","this4289","java-time-temporal-TemporalField4290","e54749","cljc.java-time.instant/equals","this4291","java-lang-Object4292"],"sourcesContent":["(ns cljc.java-time.instant (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time :refer [Instant]]))\n(def min (goog.object/get java.time.Instant \"MIN\"))\n(def epoch (goog.object/get java.time.Instant \"EPOCH\"))\n(def max (goog.object/get java.time.Instant \"MAX\"))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4225 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4226] (.truncatedTo this4225 java-time-temporal-TemporalUnit4226)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Instant this4227 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4228] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.range this4227 java-time-temporal-TemporalField4228))))\n(clojure.core/defn of-epoch-second {:arglists (quote ([\"long\" \"long\"] [\"long\"]))} (^js/JSJoda.Instant [^long long4229 ^long long4230] (js-invoke java.time.Instant \"ofEpochSecond\" long4229 long4230)) (^js/JSJoda.Instant [^long long4231] (js-invoke java.time.Instant \"ofEpochSecond\" long4231)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetDateTime [^js/JSJoda.Instant this4232 ^js/JSJoda.ZoneOffset java-time-ZoneOffset4233] (.atOffset this4232 java-time-ZoneOffset4233)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4234 ^long long4235] (.minusMillis this4234 long4235)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this4236] (.nano this4236)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4237 ^long long4238] (.plusMillis this4237 long4238)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4239 ^long long4240] (.minusSeconds this4239 long4240)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4241 ^long long4242] (.plusNanos this4241 long4242)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4243 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount4244] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this4243 java-time-temporal-TemporalAmount4244))) (^js/JSJoda.Instant [^js/JSJoda.Instant this4245 ^long long4246 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4247] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this4245 long4246 java-time-temporal-TemporalUnit4247))))\n(clojure.core/defn query {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.Instant this4248 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery4249] (.query this4248 java-time-temporal-TemporalQuery4249)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Instant\"]))} (^java.lang.String [^js/JSJoda.Instant this4250] (.toString this4250)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this4251 ^js/JSJoda.Instant java-time-Instant4252] (.isBefore this4251 java-time-Instant4252)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4253 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount4254] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this4253 java-time-temporal-TemporalAmount4254))) (^js/JSJoda.Instant [^js/JSJoda.Instant this4255 ^long long4256 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4257] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this4255 long4256 java-time-temporal-TemporalUnit4257))))\n(clojure.core/defn at-zone {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneId\"]))} (^js/JSJoda.ZonedDateTime [^js/JSJoda.Instant this4258 ^js/JSJoda.ZoneId java-time-ZoneId4259] (.atZone this4258 java-time-ZoneId4259)))\n(clojure.core/defn of-epoch-milli {:arglists (quote ([\"long\"]))} (^js/JSJoda.Instant [^long long4260] (js-invoke java.time.Instant \"ofEpochMilli\" long4260)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.Instant this4261 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4262] (.getLong this4261 java-time-temporal-TemporalField4262)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Instant this4263 ^js/JSJoda.Temporal java-time-temporal-Temporal4264 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit4265] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.until this4263 java-time-temporal-Temporal4264 java-time-temporal-TemporalUnit4265))))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.Instant [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor4266] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (js-invoke java.time.Instant \"from\" java-time-temporal-TemporalAccessor4266))))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this4267 ^js/JSJoda.Instant java-time-Instant4268] (.isAfter this4267 java-time-Instant4268)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4269 ^long long4270] (.minusNanos this4269 long4270)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"] [\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^boolean [this4271 G__4272] (.isSupported ^js/JSJoda.Instant this4271 G__4272)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Instant [^java.lang.CharSequence java-lang-CharSequence4273] (js-invoke java.time.Instant \"parse\" java-lang-CharSequence4273)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this4274] (.hashCode this4274)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Instant this4275 ^js/JSJoda.Temporal java-time-temporal-Temporal4276] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.adjustInto this4275 java-time-temporal-Temporal4276))))\n(clojure.core/defn with {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAdjuster\"] [\"java.time.Instant\" \"java.time.temporal.TemporalField\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4277 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster4278] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this4277 java-time-temporal-TemporalAdjuster4278))) (^js/JSJoda.Instant [^js/JSJoda.Instant this4279 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4280 ^long long4281] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this4279 java-time-temporal-TemporalField4280 long4281))))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.Clock\"]))} (^js/JSJoda.Instant [] (js-invoke java.time.Instant \"now\")) (^js/JSJoda.Instant [^js/JSJoda.Clock java-time-Clock4282] (js-invoke java.time.Instant \"now\" java-time-Clock4282)))\n(clojure.core/defn to-epoch-milli {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this4283] (.toEpochMilli this4283)))\n(clojure.core/defn get-epoch-second {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this4284] (.epochSecond this4284)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this4285 ^js/JSJoda.Instant java-time-Instant4286] (.compareTo this4285 java-time-Instant4286)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this4287 ^long long4288] (.plusSeconds this4287 long4288)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.Instant this4289 ^js/JSJoda.TemporalField java-time-temporal-TemporalField4290] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.get this4289 java-time-temporal-TemporalField4290))))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Instant\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Instant this4291 ^java.lang.Object java-lang-Object4292] (.equals this4291 java-lang-Object4292)))\n"]}