{
"version":3,
"file":"goog.storage.mechanism.iterablemechanism.js",
"lineCount":26,
"mappings":"AAWAA,IAAKC,CAAAA,OAAL,CAAa,0CAAb,CAAA;AAEAD,IAAKE,CAAAA,OAAL,CAAa,YAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,cAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,WAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,kCAAb,CAAA;AAYAF,IAAKG,CAAAA,OAAQC,CAAAA,SAAUC,CAAAA,iBAAvB,GAA2CC,QAAQ,EAAG;AAEpDN,MAAKG,CAAAA,OAAQC,CAAAA,SAAUC,CAAAA,iBAAkBE,CAAAA,IAAzC,CAA8C,IAA9C,EAAoD,aAApD,CAAA;AAFoD,CAAtD;AAIAP,IAAKQ,CAAAA,QAAL,CACIR,IAAKG,CAAAA,OAAQC,CAAAA,SAAUC,CAAAA,iBAD3B,EAC8CL,IAAKG,CAAAA,OAAQC,CAAAA,SAAUK,CAAAA,SADrE,CAAA;AAYAT,IAAKG,CAAAA,OAAQC,CAAAA,SAAUC,CAAAA,iBAAkBK,CAAAA,SAAUC,CAAAA,QAAnD,GAA8DC,QAAQ,EAAG;AAEvE,MAAIC,QAAQ,CAAZ;AACAb,MAAKc,CAAAA,IAAKC,CAAAA,OAAV,CAAkB,IAAKC,CAAAA,YAAL,CAAkB,IAAlB,CAAlB,EAA2C,QAAQ,CAACC,GAAD,CAAM;AAEvDjB,QAAKkB,CAAAA,OAAQC,CAAAA,YAAb,CAA0BF,GAA1B,CAAA;AACAJ,SAAA,EAAA;AAHuD,GAAzD,CAAA;AAKA,SAAOA,KAAP;AARuE,CAAzE;AAoBAb,IAAKG,CAAAA,OAAQC,CAAAA,SAAUC,CAAAA,iBAAkBK,CAAAA,SAAUM,CAAAA,YAAnD,GACIhB,IAAKoB,CAAAA,cADT;AAUApB,IAAKG,CAAAA,OAAQC,CAAAA,SAAUC,CAAAA,iBAAkBK,CAAAA,SAAUW,CAAAA,KAAnD,GAA2DC,QAAQ,EAAG;AAKpE,MAAIC,OAAOvB,IAAKc,CAAAA,IAAKU,CAAAA,OAAV,CAAkB,IAAKR,CAAAA,YAAL,CAAkB,IAAlB,CAAlB,CAAX;AACA,MAAIS,UAAU,IAAd;AACAzB,MAAK0B,CAAAA,KAAMX,CAAAA,OAAX,CAAmBQ,IAAnB,EAAyB,QAAQ,CAACN,GAAD,CAAM;AAErCQ,WAAQE,CAAAA,MAAR,CAAeV,GAAf,CAAA;AAFqC,GAAvC,CAAA;AAPoE,CAAtE;;",
"sources":["goog/storage/mechanism/iterablemechanism.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interface for storing, retieving and scanning data using some\n * persistence mechanism.\n */\n\ngoog.provide('goog.storage.mechanism.IterableMechanism');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.iter');\ngoog.require('goog.storage.mechanism.Mechanism');\n\n\n\n/**\n * Interface for all iterable storage mechanisms.\n *\n * @constructor\n * @struct\n * @extends {goog.storage.mechanism.Mechanism}\n * @abstract\n */\ngoog.storage.mechanism.IterableMechanism = function() {\n  'use strict';\n  goog.storage.mechanism.IterableMechanism.base(this, 'constructor');\n};\ngoog.inherits(\n    goog.storage.mechanism.IterableMechanism, goog.storage.mechanism.Mechanism);\n\n\n/**\n * Get the number of stored key-value pairs.\n *\n * Could be overridden in a subclass, as the default implementation is not very\n * efficient - it iterates over all keys.\n *\n * @return {number} Number of stored elements.\n */\ngoog.storage.mechanism.IterableMechanism.prototype.getCount = function() {\n  'use strict';\n  var count = 0;\n  goog.iter.forEach(this.__iterator__(true), function(key) {\n    'use strict';\n    goog.asserts.assertString(key);\n    count++;\n  });\n  return count;\n};\n\n\n/**\n * Returns an iterator that iterates over the elements in the storage. Will\n * throw goog.iter.StopIteration after the last element.\n *\n * @param {boolean=} opt_keys True to iterate over the keys. False to iterate\n *     over the values.  The default value is false.\n * @return {!goog.iter.Iterator} The iterator.\n */\ngoog.storage.mechanism.IterableMechanism.prototype.__iterator__ =\n    goog.abstractMethod;\n\n\n/**\n * Remove all key-value pairs.\n *\n * Could be overridden in a subclass, as the default implementation is not very\n * efficient - it iterates over all keys.\n */\ngoog.storage.mechanism.IterableMechanism.prototype.clear = function() {\n  'use strict';\n  // This converts the keys to an array first because otherwise\n  // removing while iterating results in unstable ordering of keys and\n  // can skip keys or terminate early.\n  var keys = goog.iter.toArray(this.__iterator__(true));\n  var selfObj = this;\n  goog.array.forEach(keys, function(key) {\n    'use strict';\n    selfObj.remove(key);\n  });\n};\n"],
"names":["goog","provide","require","storage","mechanism","IterableMechanism","goog.storage.mechanism.IterableMechanism","base","inherits","Mechanism","prototype","getCount","goog.storage.mechanism.IterableMechanism.prototype.getCount","count","iter","forEach","__iterator__","key","asserts","assertString","abstractMethod","clear","goog.storage.mechanism.IterableMechanism.prototype.clear","keys","toArray","selfObj","array","remove"]
}
