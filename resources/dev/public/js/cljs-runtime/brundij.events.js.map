{"version":3,"sources":["brundij/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","day8.re-frame.debux.common.util/send-form!","result__67771__auto__","day8.re-frame.debux.common.util/send-trace!","e","e69468","_","brundij.db/default-db","re-frame.core/reg-fx","data","brundij.ds/transact!","re_frame.core.reg_event_fx","p__69469","vec__69470","cljs.core.nth","p__69473","vec__69474","route","params","query","p__69477","vec__69478","reitit.frontend.easy.push_state","p__69481","vec__69482","db","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","cljs.core.assoc","p__69485","map__69486","cljs.core/--destructure-map","cljs.core.get","toast-content","js/module$node_modules$react_toastify$dist$index.toast","p__69487","map__69488","p__69489","map__69490","p__69491","map__69492","p__69493","p__69494","map__69495","vec__69496","is-online?","p__69499","p__69500","map__69505","vec__69506","health-id","ajax.core/json-request-format","ajax.core/json-response-format","p__69510","p__69511","map__69513","vec__69514","response","parsed-questions","cljs.core.map_indexed","index","item","cljs.core/first","cljs.core/vec"],"sourcesContent":["(ns brundij.events\n  (:require [ajax.core :as ajax]\n            [brundij.db :as db]\n            [brundij.ds :as ds]\n            [day8.re-frame.http-fx]\n            [day8.re-frame.tracing :refer-macros [fn-traced]]\n            [re-frame.core :as re-frame]\n            [reitit.frontend.controllers :refer [apply-controllers]]\n            [reitit.frontend.easy :refer [push-state]]\n            [\"react-toastify\" :refer (toast)]))\n\n(re-frame/reg-event-db\n  ::initialize-db\n  #_{:clj-kondo/ignore [:unresolved-symbol]}\n  (fn-traced [_ _]\n             db/default-db))\n\n;; ds\n(re-frame/reg-fx\n  ::transact!\n  (fn [data]\n    (ds/transact! data)))\n\n(re-frame/reg-event-fx\n  ::write-to-ds\n  (fn [_ [_ data]]\n    {::transact! data}))\n\n;; Reitit events and effects\n(re-frame/reg-event-fx\n  ::navigate\n  (fn [_ [_ route params query]]\n    {::navigate! [route params query]}))\n\n(re-frame/reg-fx\n  ::navigate!\n  (fn [[route params query]]\n    (push-state route params query)))\n\n(re-frame/reg-event-db\n  ::navigated\n  (fn [db [_ new-match]]\n    (let [old-match (:current-route db)\n          controllers (apply-controllers (:controllers old-match) new-match)]\n      (assoc db :current-route (assoc new-match :controllers controllers)))))\n\n;; toasts\n(re-frame/reg-fx\n  ::show-toast\n  (fn [{:keys [toast-content]}]\n    (toast toast-content)))\n\n(re-frame/reg-fx\n  ::show-success-toast\n  (fn [{:keys [toast-content]}]\n    (.success toast toast-content)))\n\n(re-frame/reg-fx\n  ::show-failure-toast\n  (fn [{:keys [toast-content]}]\n    (.error toast toast-content)))\n\n(re-frame/reg-fx\n  ::show-warn-toast\n  (fn [{:keys [toast-content]}]\n    (.warn toast toast-content)))\n\n;; online check\n(re-frame/reg-event-fx\n  ::set-is-online\n  (fn [{:keys [db]} [_ is-online?]]\n    (if (true? is-online?)\n      {:db (assoc db :is-online? is-online?)}\n      {:db (assoc db :is-online? is-online?)\n       ::show-warn-toast {:toast-content \"Looks like you're offline. \n                                         All operations will be made \n                                         locally and sent to the server \n                                         whenever you get online again.\"}})))\n\n;; http\n(re-frame/reg-event-fx\n  ::fetch-health-questions\n  (fn [{:keys [db]} [_ health-id]]\n    {:db (assoc db :loading true)\n     :http-xhrio {:method :get\n                  :uri (str \"https://brundij-api-demo.herokuapp.com/v1/healths/\" health-id)\n                  :format (ajax/json-request-format)\n                  :timeout 8000\n                  :response-format (ajax/json-response-format {:keywords? true})\n                  :on-success [::fetch-health-questions-success]\n                  :on-failure [::fetch-health-questions-failure]}}))\n\n(re-frame/reg-event-fx\n  ::fetch-health-questions-success\n  (fn [{:keys [db]} [_ response]]\n    (let [parsed-questions (map-indexed\n                             (fn [index item]\n                               {:content (:question/content item)\n                                :index index\n                                :uuid (:question/uuid item)\n                                :rating 2\n                                :trend \"stable\"})\n                             (:health/question (first response)))]\n      {:db (assoc db :loading false :pre-existing-questions (vec parsed-questions))\n       ::navigate! [:answers]})))\n\n(re-frame/reg-event-fx\n  ::fetch-health-questions-failure\n  (fn [_]\n    {::show-failure-toast {:toast-content \"Failure fetching your health check's questions\"}}))\n\n(re-frame/reg-fx\n  ::transact!\n  (fn [item]\n    (ds/transact! item)))\n"]}