{"version":3,"sources":["tick/format.cljc"],"mappings":";AASA,oCAAA,2CAAA,kJAAA,mJAAA,mIAAA,kJAAA,iIAAA,1wBAAKA,mKACoBC,kJACAC,yIACAC,6IACAC,sIACAC,4HACAC;AAczB,AAAA;;;;;;;;;wBAAA,gCAAAC,xDAAyBE;AAAzB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,oDAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,oDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,sDAAA,tDAAyBD,iEAQrBE;AARJ,AASG,OAACC,oDACCD,IAES,iBAAA,AACE,IAAAG,WACE,6BAAA,7BAACC,gBAAgBC;AADnB,AAAA,GAAA,CAAAF,YAAA;AAAA;;AAEE,uBAAAA,SAAA,zBAACC;;gBAHL,GAAA,CAAAF,kBAISH;AAJT,SAAAG,LAIkBI;AAJlB,AAAA;;AAAA,AAAA,MAAAJ;;;;;;AAZd,CAAA,sDAAA,tDAAyBJ,iEAiBrBE,IAAIO;AAjBR,AAkBG,IAAyBP,UACnB,2DAAA,oSAAA,7VAAM,gBAAWQ,fAAkBR,oDAAKA,MAClC,OAASA,kBAAK,EAAI,WAAA,VAAMO,iBACR,kBAEW,KAAAR,MAAW,uHAClB,AAACU,mFAAqDT,zIACtD,AAACU,8IAAsDH,SACrE,AAACI,4CAAItB,kCAAsBW;;AAR7C,AASEA;;;AA3BL,CAAA,gDAAA,hDAAyBF;;AAAzB,AA6BA,AAAA;;;;;qBAAA,6BAAAF,lDAAMiB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,iDAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,iDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAd,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,mDAAA,nDAAMc,8DAIFC;AAJJ,AAIO,mDAAKA;;;AAJZ,CAAA,mDAAA,nDAAMD,8DAKFb,IAAIc;AALR,AAMG,OAACC,iDAAiD,AAACd,oDAAUD,KAAKc;;;AANrE,CAAA,6CAAA,7CAAMD;;AAAN","names":["tick.format/predefined-formatters","cljc.java-time.format.date-time-formatter/iso-zoned-date-time","cljc.java-time.format.date-time-formatter/iso-offset-date-time","cljc.java-time.format.date-time-formatter/iso-local-time","cljc.java-time.format.date-time-formatter/iso-local-date-time","cljc.java-time.format.date-time-formatter/iso-local-date","cljc.java-time.format.date-time-formatter/iso-instant","var_args","G__73074","tick.format/formatter","js/Error","fmt","tick.format.formatter","e73076","G__73078","goog.object/get","js/JSJodaLocale","_e","locale","java.time.format/DateTimeFormatter","cljc.java_time.format.date_time_formatter.of_pattern","cljc.java-time.format.date-time-formatter/with-locale","cljs.core.get","G__73081","tick.format/format","o","cljc.java-time.format.date-time-formatter/format"],"sourcesContent":["(ns tick.format\r\n  \"originally copied from https://github.com/dm3/clojure.java-time\"\r\n  (:refer-clojure :exclude (format))\r\n  (:require [cljc.java-time.format.date-time-formatter]\r\n            #?(:cljs [java.time.format :refer [DateTimeFormatter]]))\r\n  #?(:clj\r\n     (:import [java.time.format DateTimeFormatter]\r\n              [java.util Locale])))\r\n\r\n(def predefined-formatters\r\n  {:iso-zoned-date-time  cljc.java-time.format.date-time-formatter/iso-zoned-date-time\r\n   :iso-offset-date-time cljc.java-time.format.date-time-formatter/iso-offset-date-time\r\n   :iso-local-time       cljc.java-time.format.date-time-formatter/iso-local-time\r\n   :iso-local-date-time  cljc.java-time.format.date-time-formatter/iso-local-date-time\r\n   :iso-local-date       cljc.java-time.format.date-time-formatter/iso-local-date\r\n   :iso-instant          cljc.java-time.format.date-time-formatter/iso-instant\r\n\r\n   ; these exist in java but not in js-joda \r\n   ;:iso-offset-date      (. DateTimeFormatter -ISO_OFFSET_DATE)\r\n   ;:rfc-1123-date-time   (. DateTimeFormatter -RFC_1123_DATE_TIME)\r\n   ;:iso-week-date        (. DateTimeFormatter -ISO_WEEK_DATE)\r\n   ;:iso-ordinal-date     (. DateTimeFormatter -ISO_ORDINAL_DATE)\r\n   ;:iso-time             (. DateTimeFormatter -ISO_TIME)\r\n   ;:iso-date             (. DateTimeFormatter -ISO_DATE)\r\n   ;:basic-iso-date       (. DateTimeFormatter -BASIC_ISO_DATE)\r\n   ;:iso-date-time        (. DateTimeFormatter -ISO_DATE_TIME)\r\n   ;:iso-offset-time      (. DateTimeFormatter -ISO_OFFSET_TIME)\r\n   })\r\n\r\n(defn ^DateTimeFormatter formatter\r\n  \"Constructs a DateTimeFormatter out of either a\r\n\r\n  * format string - \\\"YYYY/mm/DD\\\" \\\"YYY HH:MM\\\" etc.\r\n  or\r\n  * formatter name - :iso-instant :iso-local-date etc\r\n  \r\n  and a Locale, which is optional.\"\r\n  ([fmt]\r\n   (formatter\r\n     fmt\r\n     #?(:clj (Locale/getDefault)\r\n        :cljs (try\r\n                (some->\r\n                  (goog.object/get js/JSJodaLocale \"Locale\")\r\n                  (goog.object/get \"US\"))\r\n                (catch js/Error _e)))))\r\n  ([fmt locale]\r\n   (let [^DateTimeFormatter fmt\r\n         (cond (instance? DateTimeFormatter fmt) fmt\r\n               (string? fmt) (if (nil? locale)\r\n                               (throw\r\n                                 #?(:clj (Exception. \"Locale is nil\")\r\n                                    :cljs (js/Error. (str \"Locale is nil, try adding a require '[tick.locale-en-us]\"))))\r\n                               (-> (cljc.java-time.format.date-time-formatter/of-pattern fmt)\r\n                                   (cljc.java-time.format.date-time-formatter/with-locale locale)))\r\n               :else (get predefined-formatters fmt))]\r\n     fmt)))\r\n\r\n(defn format\r\n  \"Formats the given time entity as a string.\r\n  Accepts something that can be converted to a `DateTimeFormatter` as a first\r\n  argument. Given one argument uses the default format.\"\r\n  ([o] (str o))\r\n  ([fmt o]\r\n   (cljc.java-time.format.date-time-formatter/format (formatter fmt) o)))"]}