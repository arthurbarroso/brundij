{"version":3,"sources":["brundij/views/questions/create.cljs"],"mappings":"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","names":["brundij.views.questions.create/list-style","brundij.views.questions.create/list-item-style","brundij.views.questions.create/item-text-style-base","brundij.styles/font-family","brundij.views.questions.create/remove-item-text-style","cljs.core.merge","brundij.views.questions.create/add-question","question-text","re-frame.core/dispatch","cljs.core/random-uuid","brundij.views.questions.create/create-questions-view","cljs.core/deref","p1__77522#","questions","re_frame.core.subscribe","question-input","health-id","brundij.components.template/template","stylefy.core.use_style","brundij.components.input/input","brundij.components.button/button","cljs.core.doall","iter__4611__auto__","s__77524","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__77526","cljs.core/chunk-buffer","i__77525","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__77523","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","question","cljs.core/chunk-first"],"sourcesContent":["(ns brundij.views.questions.create\n  (:require [brundij.components.button :refer [button]]\n            [brundij.components.input :refer [input]]\n            [brundij.components.template :refer [template]]\n            [brundij.styles :refer [font-family]]\n            [brundij.views.questions.events :as qevts]\n            [brundij.views.questions.subs :as subs]\n            [re-frame.core :as re-frame]\n            [stylefy.core :as stylefy :refer [use-style]]))\n\n(def list-style {:list-style \"none\"\n                 :height \"56%\"\n                 :width \"70%\"\n                 :margin-top \"3%\"\n                 :overflow \"auto\"\n                 :padding 0})\n\n(def list-item-style {:background \"#ebf5ee\"\n                      :margin-top \"1%\"\n                      :width \"98%\"\n                      :padding \"2% 1%\"\n                      :display \"flex\"\n                      :align-items \"center\"\n                      :border-radius \"2%\"\n                      :justify-content \"space-between\"})\n\n(def item-text-style-base {:margin 0\n                           :font-family font-family})\n\n(def remove-item-text-style\n  (merge item-text-style-base\n         {:cursor \"pointer\"}))\n\n(defn add-question [question-text]\n  (re-frame/dispatch [::qevts/add-question {:id (random-uuid)\n                                            :content question-text}])\n  (re-frame/dispatch [::qevts/change-question-input nil]))\n\n(defn create-questions-view []\n  (let [questions (re-frame/subscribe [::subs/questions])\n        question-input (re-frame/subscribe [::subs/question-input])\n        health-id (re-frame/subscribe [::subs/health-uuid])]\n    [template\n     [:h3 (use-style {:font-size \"3rem\" :margin 0})\n      \"Health check questions \ud83c\udf43\"]\n     [:p (use-style {:max-width \"70%\"})\n      \"Health checks come with a few default questions. You may add or remove \n      questions as you wish\"]\n     [:div (use-style {:display \"flex\" :width \"70%\"})\n      [input {:value @question-input\n              :on-change #(re-frame/dispatch [::qevts/change-question-input %])\n              :disabled false\n              :type \"text\"\n              :extra-styles {:width \"100%\"\n                             :margin-right \"3%\"}\n              :placeholder \"New question\"}]\n      [button {:on-click #(add-question @question-input)\n               :text \"\u2795\" :disabled false\n               :extra-styles {:color \"#333\"}}]]\n     [:ul (use-style list-style)\n      (doall\n        (for [question @questions]\n          ^{:key (:id question)}\n          [:li (use-style list-item-style)\n           [:p (use-style item-text-style-base)\n            (:content question)]\n           [:p\n            (use-style\n              remove-item-text-style\n              {:on-click\n                 #(re-frame/dispatch [::qevts/remove-question-by-uuid\n                                      (:id question)])})\n            \"\u274c\"]]))]\n     [button {:on-click #(re-frame/dispatch [::qevts/create-questions @health-id @questions])\n              :text \"Create questions\"\n              :extra-styles {:color \"#333\"\n                             :width \"70%\"\n                             :margin-top \"1%\"\n                             :font-weight 700}\n              :disabled false}]]))\n"]}