{"version":3,"sources":["brundij/components/error_boundary.cljs"],"mappings":";AAGA,AAAA,iDAAA,yDAAAA,1GAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,oFAAAF;;;AAAA,AAAA,CAAA,sFAAA,tFAAME,iGACDI;AADL,AAEE,IAAMC,YAAU,gDAAA,hDAACC;AAAjB,AACE,+DAAA,2CAAA,oEAAA,cAAA,rLAACC,uQAEuB,WAAKC,IAAIC;AAAT,AACE,uCAAA,hCAACC,sBAAOL,6FAAWG,IAAIC;GAHjD,yEAImB;mCAAOL;AAAP,AACE,GAAI,CAAA,AAAAO,8BAAA,dAAON;AACT,oDAAA,mFAAA,hIAACO,yLAAWR;;AACZ,IAAAS,aAAA,AAAAF,gBAAgBN;QAAhB,AAAAS,4CAAAD,WAAA,IAAA,/DAAOE;WAAP,AAAAD,4CAAAD,WAAA,IAAA,lEAASJ;AAAT,AAAA,0FAAA,mDAAA,mFAAA,qDACe,AAACO,wGAAOP;;;;IAJpBL;;;;EAAAA;;oCAAAA;;;IAAAA;0BAAAA;;;;;;;;AAP9B,CAAA,yEAAA,zEAAMJ;;AAAN;AAAA,CAAA,mEAAA,WAAAC,9EAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA","names":["var_args","args__4824__auto__","len__4818__auto__","i__4819__auto__","argseq__4825__auto__","cljs.core/IndexedSeq","brundij.components.error-boundary/err-boundary","seq69441","self__4806__auto__","cljs.core/seq","children","err-state","reagent.core.atom","reagent.core.create_class","err","info","cljs.core/reset!","cljs.core/deref","cljs.core.into","vec__69445","cljs.core.nth","_","cljs.core.pr_str"],"sourcesContent":["(ns brundij.components.error-boundary\n  (:require [reagent.core :as r]))\n\n(defn err-boundary\n  [& children]\n  (let [err-state (r/atom nil)]\n    (r/create-class\n      {:display-name \"ErrBoundary\"\n       :component-did-catch (fn [err info]\n                              (reset! err-state [err info]))\n       :reagent-render (fn [& children]\n                         (if (nil? @err-state)\n                           (into [:<>] children)\n                           (let [[_ info] @err-state]\n                             [:pre [:code (pr-str info)]])))})))\n"]}