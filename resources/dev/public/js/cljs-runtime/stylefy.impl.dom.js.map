{"version":3,"sources":["stylefy/impl/dom.cljs"],"mappings":"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","names":["stylefy.impl.dom/stylefy-node-id","stylefy.impl.dom/stylefy-constant-node-id","stylefy.impl.dom/stylefy-base-node","cljs.core.atom","stylefy.impl.dom/stylefy-instance-id","stylefy.impl.dom/uninitialised-styles","p__71621","map__71622","cljs.core/--destructure-map","cljs.core.get","stylefy.impl.dom/init-multi-instance","multi-instance","_options","base-node","instance-id","js/Error","cljs.core.pr_str","cljs.core/reset!","stylefy.impl.dom/get-stylefy-node","node-id","final-id","js/document","dommy.core/selector","stylefy$impl$dom$Dom$load_uninitialised_styles$dyn","x__4509__auto__","m__4510__auto__","stylefy.impl.dom/load-uninitialised-styles","goog/typeOf","m__4508__auto__","cljs.core/missing-protocol","stylefy$impl$dom$Dom$load_cache$dyn","stylefy.impl.dom/load-cache","stylefy$impl$dom$Dom$add_style$dyn","stylefy.impl.dom/add-style","stylefy$impl$dom$Dom$add_class$dyn","stylefy.impl.dom/add-class","stylefy$impl$dom$Dom$add_tag$dyn","stylefy.impl.dom/add-tag","stylefy$impl$dom$Dom$add_font_face$dyn","stylefy.impl.dom/add-font-face","stylefy$impl$dom$Dom$add_keyframes$dyn","stylefy.impl.dom/add-keyframes","stylefy$impl$dom$Dom$update_dom$dyn","stylefy.impl.dom/update-dom","stylefy$impl$dom$Dom$update_dom_if_needed$dyn","stylefy.impl.dom/update-dom-if-needed","stylefy$impl$dom$Dom$style_in_dom_QMARK_$dyn","stylefy.impl.dom/style-in-dom?","stylefy$impl$dom$Dom$style_by_hash$dyn","stylefy.impl.dom/style-by-hash","stylefy.impl.dom/Dom","this","uninitialised-styles","style","class-as-css","tag-as-css","font-face-as-css","identifier","keyframes-as-css","style-hash","stylefy.impl.dom/save-uninitialised-style","key","style-as-css","cljs.core/deref","cljs.core.assoc","cljs.core.conj","G__71908","this__4461__auto__","k__4462__auto__","this__4463__auto__","k71910","else__4464__auto__","G__71938","__extmap","this__4481__auto__","f__4482__auto__","init__4483__auto__","cljs.core.reduce","ret__4484__auto__","p__71954","vec__71955","k__4485__auto__","cljs.core.nth","v__4486__auto__","this__4476__auto__","writer__4477__auto__","opts__4478__auto__","pr-pair__4479__auto__","keyval__4480__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__71909","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4459__auto__","__meta","this__4456__auto__","__hash","this__4465__auto__","cljs.core/count","this__4457__auto__","h__4319__auto__","coll__4458__auto__","cljs.core/hash-unordered-coll","this71911","other71912","cljs.core._EQ_","this__4471__auto__","k__4472__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","cljs.core/PROTOCOL_SENTINEL","this__4468__auto__","this__4469__auto__","k__4470__auto__","pred__72127","cljs.core/keyword-identical?","expr__72128","this__4474__auto__","cljs.core/seq","this__4460__auto__","this__4466__auto__","entry__4467__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","stylefy.impl.dom/UninitialisedDom","this__4505__auto__","cljs.core/List","writer__4506__auto__","cljs.core/-write","G__71916","extmap__4501__auto__","G__72130","cljs.core/record?","stylefy.impl.dom/->UninitialisedDom","stylefy.impl.dom/map->UninitialisedDom","stylefy.impl.dom/dom"],"sourcesContent":["(ns stylefy.impl.dom\n  (:require [dommy.core :as dommy]\n            [garden.core :refer [css]]\n            [cljs.core.async :as async] ; Mandatory for running tests\n            [stylefy.impl.cache :as cache]\n            [stylefy.impl.log :as log]\n            [stylefy.impl.state :as state])\n  (:require-macros\n    [cljs.core.async.macros :refer [go]]))\n\n(def stylefy-node-id \"#_stylefy-styles_\")\n(def stylefy-constant-node-id \"#_stylefy-constant-styles_\")\n\n(def stylefy-base-node (atom nil)) ; Used when running multiple instances of stylefy on the same page\n(def stylefy-instance-id (atom nil)) ; Used when running multiple instances of stylefy on the same page\n\n(def uninitialised-styles (atom {:style []\n                                 :font-face []\n                                 :keyframes []\n                                 :tag []\n                                 :class []}))\n\n(defn init-multi-instance [{:keys [multi-instance] :as _options}]\n  (let [base-node (:base-node multi-instance)\n        instance-id (:instance-id multi-instance)]\n    (assert (or (nil? instance-id)\n                (string? instance-id))\n            (str \"instance-id must be string. Got: \" (pr-str base-node instance-id)))\n    (reset! stylefy-base-node base-node)\n    (reset! stylefy-instance-id instance-id)))\n\n(defn get-stylefy-node [node-id base-node instance-id]\n  (let [final-id (str node-id (when instance-id (str instance-id)))]\n    (if (nil? base-node)\n      (dommy/sel1 final-id)\n      (dommy/sel1 base-node final-id))))\n\n(defprotocol Dom\n  ; Init\n  (load-uninitialised-styles [this uninitialised-styles])\n  (load-cache [this])\n\n  ; Add styles\n  (add-style [this style])\n  (add-class [this class-as-css])\n  (add-tag [this tag-as-css])\n  (add-font-face [this font-face-as-css])\n  (add-keyframes [this identifier keyframes-as-css])\n\n  ; DOM management\n  (update-dom [this])\n  (update-dom-if-needed [this])\n  (style-in-dom? [this style-hash])\n  (style-by-hash [this style-hash]))\n\n(defn save-uninitialised-style [key style-as-css]\n  (reset! uninitialised-styles\n          (assoc @uninitialised-styles\n            key\n            (conj (key @uninitialised-styles) style-as-css))))\n\n; Temporary \"dummy\" DOM handler is used until stylefy is initialised.\n; The main purpose of this \"dummy\" handler is to save the styles\n; that are created before the real DOM handler has been initialised.\n(defrecord UninitialisedDom []\n  Dom\n  ; Init\n  (load-uninitialised-styles [this uninitialised-styles])\n  (load-cache [this])\n\n  ; Add styles\n  (add-style [this style] (save-uninitialised-style :style style))\n  (add-class [this class-as-css] (save-uninitialised-style :class class-as-css))\n  (add-tag [this tag-as-css] (save-uninitialised-style :tag tag-as-css))\n  (add-font-face [this font-face-as-css] (save-uninitialised-style :font-face font-face-as-css))\n  (add-keyframes [this identifier keyframes-as-css] (save-uninitialised-style :keyframes [identifier keyframes-as-css]))\n\n  ; DOM management\n  (update-dom [this])\n  (update-dom-if-needed [this])\n  (style-in-dom? [this style-hash] false)\n  (style-by-hash [this style-hash]))\n\n(def dom (atom (->UninitialisedDom)))"]}