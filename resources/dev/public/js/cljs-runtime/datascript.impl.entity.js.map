{"version":3,"sources":["datascript/impl/entity.cljc"],"mappings":"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","names":["datascript.impl.entity/entid","db","eid","cljs.core/sequential?","cljs.core/Keyword","datascript.db/entid","js/Error","datascript.impl.entity/entity","datascript.db/db?","temp__5735__auto__","e","G__62248","G__62249","G__62250","G__62251","datascript.impl.entity/->Entity","cljs.core/volatile!","datascript.impl.entity/entity-attr","a","datoms","datascript.db/multival?","datascript.db/ref?","p1__62252#","p2__62253#","cljs.core.reduce","cljs.core.conj","p1__62254#","p2__62255#","cljs.core/first","datascript.impl.entity/-lookup-backwards","attr","not-found","temp__5733__auto__","cljs.core/not-empty","datascript.db/-search","datascript.db/component?","p1__62257#","p2__62258#","datascript.impl.entity/multival->js","val","cljs.core/to-array","datascript.impl.entity/js-seq","datascript.impl.entity/touch","iter__4611__auto__","s__62287","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__62289","cljs.core/chunk-buffer","i__62288","vec__62291","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__62286","cljs.core/chunk-rest","vec__62295","cljs.core/cons","cljs.core/rest","cljs.core/deref","v","unused__10818__auto__","self__","G__62354","args62304","cljs.core/aclone","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","datascript.impl.entity/Entity","touched","cache","this","cljs.core/pr-str*","other","datascript.impl.entity/equiv-entity","cljs.core/es6-iterator","cljs.core/keys","cljs.core/es6-entries-iterator","cljs.core.map","cljs.core/second","cljs.core._EQ_","datascript.db/reverse-ref?","datascript.db/reverse-ref","G__62349","datascript.impl.entity/lookup-entity","f","seq__62305","chunk__62306","count__62307","i__62308","vec__62317","c__4638__auto__","cljs.core/chunk-first","vec__62320","cljs.core/next","use-as-this","seq__62327","chunk__62328","count__62329","i__62330","vec__62339","vec__62346","o","_","cljs.core/hash","k","cljs.core.not_EQ_","writer","opts","cljs.core/-pr-writer","cljs.core.assoc","datascript.impl.entity/entity?","x","that","var_args","G__62369","datascript.impl.entity.lookup_entity","temp__5737__auto__","fexpr__62373","value","cljs.core/vreset!","datascript.impl.entity/touch-components","a->v","cljs.core/reduce-kv","acc","cljs.core/set","datascript.impl.entity/datoms->cache","part","cljs.core.partition_by","goog/exportSymbol"],"sourcesContent":["(ns ^:no-doc datascript.impl.entity\n  (:refer-clojure :exclude [keys get])\n  (:require [#?(:cljs cljs.core :clj clojure.core) :as c]\n            [datascript.db :as db]))\n\n(declare entity ->Entity equiv-entity lookup-entity touch)\n\n(defn- entid [db eid]\n  (when (or (number? eid)\n            (sequential? eid)\n            (keyword? eid))\n    (db/entid db eid)))\n\n(defn entity [db eid]\n  {:pre [(db/db? db)]}\n  (when-let [e (entid db eid)]\n    (->Entity db e (volatile! false) (volatile! {}))))\n\n(defn- entity-attr [db a datoms]\n  (if (db/multival? db a)\n    (if (db/ref? db a)\n      (reduce #(conj %1 (entity db (:v %2))) #{} datoms)\n      (reduce #(conj %1 (:v %2)) #{} datoms))\n    (if (db/ref? db a)\n      (entity db (:v (first datoms)))\n      (:v (first datoms)))))\n\n(defn- -lookup-backwards [db eid attr not-found]\n  (if-let [datoms (not-empty (db/-search db [nil attr eid]))]\n    (if (db/component? db attr)\n      (entity db (:e (first datoms)))\n      (reduce #(conj %1 (entity db (:e %2))) #{} datoms))\n    not-found))\n\n#?(:cljs\n   (defn- multival->js [val]\n     (when val (to-array val))))\n\n#?(:cljs\n   (defn- js-seq [e]\n     (touch e)\n     (for [[a v] @(.-cache e)]\n       (if (db/multival? (.-db e) a)\n         [a (multival->js v)]\n         [a v]))))\n\n(deftype Entity [db eid touched cache]\n  #?@(:cljs\n      [Object\n       (toString [this]\n                 (pr-str* this))\n       (equiv [this other]\n              (equiv-entity this other))\n\n       ;; js/map interface\n       (keys [this]\n             (es6-iterator (c/keys this)))\n       (entries [this]\n                (es6-entries-iterator (js-seq this)))\n       (values [this]\n               (es6-iterator (map second (js-seq this))))\n       (has [this attr]\n            (not (nil? (.get this attr))))\n       (get [this attr]\n            (if (= attr \":db/id\")\n              eid\n              (if (db/reverse-ref? attr)\n                (-> (-lookup-backwards db eid (db/reverse-ref attr) nil)\n                    multival->js)\n                (cond-> (lookup-entity this attr)\n                  (db/multival? db attr) multival->js))))\n       (forEach [this f]\n                (doseq [[a v] (js-seq this)]\n                  (f v a this)))\n       (forEach [this f use-as-this]\n                (doseq [[a v] (js-seq this)]\n                  (.call f use-as-this v a this)))\n\n       ;; js fallbacks\n       (key_set   [this] (to-array (c/keys this)))\n       (entry_set [this] (to-array (map to-array (js-seq this))))\n       (value_set [this] (to-array (map second (js-seq this))))\n\n       IEquiv\n       (-equiv [this o] (equiv-entity this o))\n\n       IHash\n       (-hash [_]\n              (hash eid)) ;; db?\n\n       ISeqable\n       (-seq [this]\n             (touch this)\n             (seq @cache))\n\n       ICounted\n       (-count [this]\n               (touch this)\n               (count @cache))\n\n       ILookup\n       (-lookup [this attr]           (lookup-entity this attr nil))\n       (-lookup [this attr not-found] (lookup-entity this attr not-found))\n\n       IAssociative\n       (-contains-key? [this k]\n                       (not= ::nf (lookup-entity this k ::nf)))\n\n       IFn\n       (-invoke [this k]\n                (lookup-entity this k))\n       (-invoke [this k not-found]\n                (lookup-entity this k not-found))\n\n       IPrintWithWriter\n       (-pr-writer [_ writer opts]\n                   (-pr-writer (assoc @cache :db/id eid) writer opts))]\n\n      :clj\n      [Object\n       (toString [e]      (pr-str (assoc @cache :db/id eid)))\n       (hashCode [e]      (hash eid)) ; db?\n       (equals [e o]      (equiv-entity e o))\n\n       clojure.lang.Seqable\n       (seq [e]           (touch e) (seq @cache))\n\n       clojure.lang.Associative\n       (equiv [e o]       (equiv-entity e o))\n       (containsKey [e k] (not= ::nf (lookup-entity e k ::nf)))\n       (entryAt [e k]     (some->> (lookup-entity e k) (clojure.lang.MapEntry. k)))\n\n       (empty [e]         (throw (UnsupportedOperationException.)))\n       (assoc [e k v]     (throw (UnsupportedOperationException.)))\n       (cons  [e [k v]]   (throw (UnsupportedOperationException.)))\n       (count [e]         (touch e) (count @(.-cache e)))\n\n       clojure.lang.ILookup\n       (valAt [e k]       (lookup-entity e k))\n       (valAt [e k not-found] (lookup-entity e k not-found))\n\n       clojure.lang.IFn\n       (invoke [e k]      (lookup-entity e k))\n       (invoke [e k not-found] (lookup-entity e k not-found))\n       ]))\n\n(defn entity? [x] (instance? Entity x))\n\n#?(:clj\n   (defmethod print-method Entity [e, ^java.io.Writer w]\n     (.write w (str e))))\n\n(defn- equiv-entity [^Entity this that]\n  (and\n   (instance? Entity that)\n   ;; (= db  (.-db ^Entity that))\n   (= (.-eid this) (.-eid ^Entity that))))\n\n(defn- lookup-entity\n  ([this attr] (lookup-entity this attr nil))\n  ([^Entity this attr not-found]\n   (if (= attr :db/id)\n     (.-eid this)\n     (if (db/reverse-ref? attr)\n       (-lookup-backwards (.-db this) (.-eid this) (db/reverse-ref attr) not-found)\n       (if-some [v (@(.-cache this) attr)]\n         v\n         (if @(.-touched this)\n           not-found\n           (if-some [datoms (not-empty (db/-search (.-db this) [(.-eid this) attr]))]\n             (let [value (entity-attr (.-db this) attr datoms)]\n               (vreset! (.-cache this) (assoc @(.-cache this) attr value))\n               value)\n             not-found)))))))\n\n(defn touch-components [db a->v]\n  (reduce-kv (fn [acc a v]\n               (assoc acc a\n                 (if (db/component? db a)\n                   (if (db/multival? db a)\n                     (set (map touch v))\n                     (touch v))\n                   v)))\n             {} a->v))\n\n(defn- datoms->cache [db datoms]\n  (reduce (fn [acc part]\n    (let [a (:a (first part))]\n      (assoc acc a (entity-attr db a part))))\n    {} (partition-by :a datoms)))\n\n(defn touch [^Entity e]\n  {:pre [(entity? e)]}\n  (when-not @(.-touched e)\n    (when-let [datoms (not-empty (db/-search (.-db e) [(.-eid e)]))]\n      (vreset! (.-cache e) (->> datoms\n                                (datoms->cache (.-db e))\n                                (touch-components (.-db e))))\n      (vreset! (.-touched e) true)))\n  e)\n\n#?(:cljs (goog/exportSymbol \"datascript.impl.entity.Entity\" Entity))\n"]}